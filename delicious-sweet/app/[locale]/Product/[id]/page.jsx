import HeroProductDetails from "../../component/productDetails/heroProductDetails";
import RelatedProduct from "../../component/productDetails/relatedProduct";
import SecondSectionP from "../../component/productDetails/secondSectionP";
import ThirdSectionP from "../../component/productDetails/thirdSectionP";
export const metadata = {
  title: "Product Details Page",
  description: "Generated by create next app",
};

const API_URL = process.env.NEXT_PUBLIC_API_URL;

async function fetchAllProducts() {
  try {
    const res = await fetch(`${API_URL}/products/latest?guest_id=1`, {
      cache: "no-store", // Ensure fresh data
    });

    if (!res.ok) {
      console.error(`API Error: ${res.status}`);
      return null;
    }

    const data = await res.json();
    return data.products || []; // Ensure products array
  } catch (error) {
    console.error("Error fetching product details:", error);
    return [];
  }
}

export default async function ProductDetails({ params }) {
  if (!params || !params.id) return <p>Invalid product ID</p>;

  const allProducts = await fetchAllProducts();
  const product = allProducts.find((prod) => prod.id.toString() === params.id);

  if (!product) return <h1 className="fw-bold text-center w-100">Product not found</h1>;

  return (
    <>
      <HeroProductDetails />
      <SecondSectionP product={product} />
      <ThirdSectionP />
      <RelatedProduct productId={params.id} />
    </>
  );
}
